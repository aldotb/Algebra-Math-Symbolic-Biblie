matrix   B.tsimplify()
matrix A.setif('3','j==i')
matrix  R.vecdata()
matrix AB.traz()
matrix X=createMatrix(2,2,'a')
MyEq F.factor('sqrt')
MyEq F.roots()
matrix B.set('noeval',n=1000)
matrix R.simplesolve('show')
matrix A=MyMat(1,5,1,0,2,7,0,0,3,3)

matrix diag(x,y,z)
matrix MatSolveSys(A,C)
algorith squareadd2squaremul(Q2.L)
MyEq x.update(p)
findFunc

MyDiff  subsics
MyDiff solvelaplace(Ls,t,y)
MyDiff translaplacemult
MyDiff translaplacedivt
MyDiff Q.diff('dQ',func=y)
MyDiff solvediffsymbol
MyDiff dQ=Q.diff('dQ',func=y)

MyEq numerexpand
imaginary  re(z)
imaginary z.conjugate()
imaginary imodule(z)
imaginary img2polar(z)
imaginary img2polar(z)


libfunc primesymboldiff(var) 
libfunc functiondiff(QQ,var,var2) 
libfunc sympydiff2prime(expr,var,var2) 
libfunc primediff2sympy(expr,var,var2) 
libfunc changedview

reducecero()
transform2(P(),'A-(x+1)**2')
tri2bin (str(expr),var=x)


